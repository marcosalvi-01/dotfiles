#!/usr/bin/env bash

# Function to guess if something is a git URL
is_git_url() {
    local input="$1"
    [[ "$input" =~ ^(git@|https://|http://|ssh://).+\.git$ ]]
}

if [[ $# -eq 1 ]]; then
    selected=${1/#\~/$HOME}
    query=""
else
    # Define known directories in the form: path:icon label
    known_dirs=(
        "$HOME/dotfiles: dotfiles"
        "$HOME/note: note"
        "$HOME: home"
        "$HOME/Downloads: downloads"
        "$HOME/Desktop:󰇄 desktop"
        "$HOME/Music: music"
        "$HOME/Documents:󰈙 documents"
        "$HOME/Pictures: pictures"
    )

    fzf_output=$(
        (
            # Print known directories
            for entry in "${known_dirs[@]}"; do
                echo "$entry"
            done

            # Print top-level directories in home (excluding hidden)
            find ~ -mindepth 1 -maxdepth 1 -type d -not -name ".*" | while read -r dir; do
                display_dir="${dir/#$HOME/\~}"
                echo "$dir:$display_dir"
            done
        ) | awk -F: '!seen[$1]++' | fzf \
            --print-query \
            --delimiter=: \
            --with-nth=2 \
            --preview 'eza --icons=always --color=always --oneline {1}'
    )

    # Read the query (typed text) and the selected line
    query=$(echo "$fzf_output" | sed -n '1p')
    displayed=$(echo "$fzf_output" | sed -n '2p')

    if [[ -z "$displayed" ]]; then
        # No selection from fzf
        if [[ -n "$query" ]]; then
            # Check if query is a git URL
            if is_git_url "$query"; then
                repo_name=$(basename "$query")
                repo_name="${repo_name%.git}"
                if git clone "$query" "$HOME/$repo_name"; then
                    selected="$HOME/$repo_name"
                else
                    echo "Failed to clone repository. Exiting."
                    exit 1
                fi
            else
                # Create a new directory under HOME
                selected=${query/#\~/$HOME}
                selected="$HOME/$selected"
                mkdir -p "$selected"
            fi
        else
            # No query and no selection means user cancelled
            exit 0
        fi
    else
        # Extract the real directory from before the colon
        selected=$(echo "$displayed" | cut -d: -f1)
    fi
fi

selected_name=$(basename "$selected" | tr ".,: " "____")

switch_to() {
    if [[ -z "$TMUX" ]]; then
        tmux attach-session -t "$selected_name"
    else
        tmux switch-client -t "$selected_name"
    fi
}

if tmux has-session -t="$selected_name" 2>/dev/null; then
    switch_to
else
    tmux new-session -ds "$selected_name" -c "$selected"
    switch_to
    tmux send-keys -t "$selected_name" "ready-tmux" Enter
fi

