#!/bin/sh
###############################################################################
# tmux‑shell‑popup  —  self‑popup‑ing wrapper around an existing pane
# POSIX‑sh safe: no printf %q, no bashisms.
###############################################################################
set -eu

# ------------------------- defaults ------------------------------------------
WIDTH="70%"
HEIGHT="70%"
BORDER="rounded"
TITLE=""
POPUP_OPTS=""          # --xC etc. kept verbatim here

# ------------------------- option parsing ------------------------------------
while [ "$#" -gt 0 ]; do
    case "$1" in
        -w|--width)   WIDTH=$2;  shift 2 ;;
        -h|--height)  HEIGHT=$2; shift 2 ;;
        -b|--border)  BORDER=$2; shift 2 ;;
        -T|--title)   TITLE=$2;  shift 2 ;;
        --)           shift; POPUP_OPTS="$*"; break ;;
        -*)           echo "Unknown flag $1" >&2; exit 64 ;;
        *)            break ;;
    esac
done

[ "$#" -eq 3 ] || {
    echo "Usage: $0 [popup‑opts] <session> <window> <pane> [-- extra popup flags]" >&2
    exit 64
}

SESSION=$1; WINDOW_INDEX=$2; PANE_INDEX=$3
SCRATCH="_popup_${SESSION}_${WINDOW_INDEX}_${PANE_INDEX}"

# ------------------------- trampoline ----------------------------------------
if [ -z "${TMUX_SHELL_POPUP_INNER:-}" ]; then
    # Build argv for tmux display‑popup safely in an array‑style list
    set -- display-popup -b "$BORDER" -w "$WIDTH" -h "$HEIGHT"
    [ -n "$TITLE" ]     && set -- "$@" -T "#[align=centre] ""$TITLE"" "
    [ -n "$POPUP_OPTS" ] && set -- "$@" "$POPUP_OPTS"

    # Now append the command (env + script + its args)
    set -- "$@" env TMUX_SHELL_POPUP_INNER=1 \
        "$0" -w "$WIDTH" -h "$HEIGHT" -b "$BORDER" -T "#[align=centre] ""$TITLE"" " -- \
        "$SESSION" "$WINDOW_INDEX" "$PANE_INDEX"

    exec tmux "$@"
fi
# ------------------------- INNER portion -------------------------------------

command -v tmux >/dev/null 2>&1 || {
echo "tmux not found" >&2; exit 127; }

# --- ensure target session exists (create via tmux-sessionizer) --------------
if ! tmux has-session -t "$SESSION" 2>/dev/null; then
    command -v tmux-sessionizer >/dev/null 2>&1 || {
    echo "'tmux-sessionizer' not installed" >&2; exit 127; }
    tmux-sessionizer -c "$SESSION" || {
    tmux has-session -t "$SESSION" 2>/dev/null || exit 1; }

    # wait for tmux-sessionizer to create the windows
    sleep 0.5
fi

# --- verify window / pane indices -------------------------------------------
tmux list-windows -t "$SESSION" -F '#{window_index}' | grep -qx "$WINDOW_INDEX" ||
{ echo "Window $WINDOW_INDEX not found in $SESSION" >&2; exit 1; }
tmux list-panes -t "${SESSION}:${WINDOW_INDEX}" -F '#{pane_index}' | grep -qx "$PANE_INDEX" ||
{ echo "Pane $PANE_INDEX not found in ${SESSION}:${WINDOW_INDEX}" >&2; exit 1; }

# --- scratch session creation / configuration -------------------------------
if ! tmux has-session -t "$SCRATCH" 2>/dev/null; then
    tmux new-session -d -s "$SCRATCH" -t "$SESSION"

    tmux set-option -t "$SCRATCH" status  off   >/dev/null 2>&1 || true
    tmux set-option -t "$SCRATCH" prefix  None  >/dev/null 2>&1 || true
    tmux set-option -t "$SCRATCH" prefix2 None  >/dev/null 2>&1 || true
    tmux set-option -t "$SCRATCH" key-table popup >/dev/null 2>&1 || true

    tmux set-option -t "$SCRATCH" status off       >/dev/null 2>&1 || echo "Warning: Couldn't disable status bar for '$SCRATCH'" >&2
    CLOSE="tmux detach-client -s '$SCRATCH'; tmux kill-session -t '$SCRATCH'"
    tmux bind-key -T popup C-d    run-shell "$CLOSE" >/dev/null 2>&1 || true
    tmux bind-key -T popup Escape run-shell "$CLOSE" >/dev/null 2>&1 || true
    tmux set-hook  -t "$SCRATCH" client-detached "$CLOSE" >/dev/null 2>&1 || true
fi

# --- attach ------------------------------------------------------------------
TARGET="${SCRATCH}:${WINDOW_INDEX}.${PANE_INDEX}"
tmux select-pane -t "$TARGET" || { tmux kill-session -t "$SCRATCH"; exit 1; }
exec tmux attach-session -t "$TARGET"

