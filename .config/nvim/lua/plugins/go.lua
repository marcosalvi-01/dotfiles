return {}
-- return {
-- 	"ray-x/go.nvim",
-- 	dependencies = { -- optional packages
-- 		"neovim/nvim-lspconfig",
-- 		"nvim-treesitter/nvim-treesitter",
-- 	},
-- 	config = function()
-- 		-- set the capabilities (fix lsp with blink)
-- 		local capabilities = require("blink-cmp").get_lsp_capabilities()
-- 		require("go").setup({
-- 			lsp_cfg = {
-- 				capabilities = capabilities,
-- 			},
-- 			lsp_keymaps = false,
-- 			lsp_inlay_hints = {
-- 				other_hints_prefix = "ÔÅ° ",
-- 				show_parameter_hints = false,
-- 			},
-- 			diagnostic = {},
-- 		})
--
-- 		-- Keymaps
-- 		vim.keymap.set("n", "<leader>gat", ":GoAddTag<CR>", { desc = "Go [A]dd [T]ag to struct" })
-- 		vim.keymap.set("n", "<leader>gi", ":GoImpl ", { desc = "[G]o [I]mplement interface" })
-- 		vim.keymap.set("n", "<leader>gc", ":GoCmt<CR>", { desc = "[G]o add [C]omment" })
-- 		vim.keymap.set("n", "<leader>gmt", ":GoModTidy<CR>", { desc = "[G]o [M]od [T]idy" })
-- 		vim.keymap.set("n", "<leader>gfp", ":GoFixPlurals<CR>", { desc = "[G]o [F]ix [P]lurals" })
-- 		vim.keymap.set("n", "<leader>ge", ":GoIfErr<CR>k", { desc = "[G]o add if [E]rr" })
-- 		vim.keymap.set("n", "<leader>gfs", ":GoFillStruct<CR>", { desc = "[G]o [F]ill [S]truct" })
-- 		vim.keymap.set("n", "<leader>gfw", ":GoFillSwitch<CR>", { desc = "[G]o [F]ill s[W]itch" })
--
-- 		-- clean imports when saving a file
-- 		vim.api.nvim_create_autocmd("BufWritePre", {
-- 			pattern = "*.go",
-- 			callback = function()
-- 				vim.cmd("GoImports")
-- 			end,
-- 		})
-- 	end,
-- 	ft = { "go", "gomod" },
-- 	build = ':lua require("go.install").update_all_sync()', -- if you need to install/update all binaries
-- }
